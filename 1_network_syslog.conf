input {
   udp {
       port => 4514
       type => "network_device"
       add_field => {
           "source" => "netdev"
       }   
   }
   udp {
       port => 514
       type => "security_device"
       add_field => {
           "source" => "secdev"
       }
   }
}

filter {
   if "TP_660N" in [message] or "S_CDC_NDS_DMZ_IPS330_1" in [message] or "DMZ_IPS660" in [message] {
       grok {
           match => { "message" => "^<%{POSINT:syslog_pri}>%{GREEDYDATA:csv_message}" }
	   add_field => {"appName" => "tpips" }
       }
   }
#*********************pre-treated netscreen FW***************************
    else if "CORE_J140" in [message] or "SSG140" in [message]{
	grok {
            patterns_dir => ["/etc/logstash/patterns"]
	    match => { "message" => "^<%{POSINT:syslog_pri}>%{NETSCREENSYSLOG:netscreen_pri} %{GREEDYDATA:message}"}
            overwrite => ["message"]  
            add_field => {"appName" => "netscreenfw"}
        } 
   }
#*******************pre-treated netscreen sys_log************************
   else if "BEA_CNDC_INTERNET_J350" in [message]{
	grok {
	    match => { "message" => "^<%{POSINT:syslog_pri}>%{GREEDYDATA:message}"}
	    overwrite => ["message"]
	    add_field => {"appName" => "netscreen"}
        }
   
   }

#*****************pre-processed waf********************************************************
   else if "waf_log_websec" in [message] {
        grok {
           patterns_dir => ["/etc/logstash/patterns"]
           match => { "message" => [
                                     "^<%{POSINT:syslog_pri}>%{WAFTIME_1:time} localhost waf: %{GREEDYDATA:message}",
                                     "^<%{POSINT:syslog_pri}>%{WAFTIME_2:time} localhost waf: %{GREEDYDATA:message}"
                                   ]              
                    }
           overwrite => ["message"]
           add_field => {"appName" => "wafsec"}
        }    
 
   }
#***********************pre-processed waf-stat***************************************************************  
   else if "waf_log_wafstat" in [message] {
        grok {
           patterns_dir => ["/etc/logstash/patterns"]
           match => { "message" => [
                                     "^<%{POSINT:syslog_pri}>%{WAFTIME_1:time} localhost waf: %{GREEDYDATA:message}",
                                     "^<%{POSINT:syslog_pri}>%{WAFTIME_2:time} localhost waf: %{GREEDYDATA:message}"                                                          ]
                    }
           overwrite => ["message"]
           add_field => {"appName" => "wafstat"}
        }    
   }
#**************************WL_FW pre**************************************************
   else if "F_BJ_WL" in [message] {
        grok {
           patterns_dir => ["/etc/logstash/patterns"]
           match => { "message" => [
                                     "^<%{POSINT:syslog_pri}>%{SWITCH_TIME_1:fw_time} %{GREEDYDATA:message}",
                                     "^<%{POSINT:syslog_pri}>%{SWITCH_TIME_2:fw_time} %{GREEDYDATA:message}"
                                   ]  
                    }
           overwrite => ["message"]
           add_field => {"appName" => "firewallwl"}
        }    
   }
#*************************pre-processed ADS****************************************************************
   else if "SYN-Flood"    in [message] or 
           "Stream-Flood" in [message] or 
           "UDP-Flood"    in [message] or
           "ACK-Flood"    in [message] {
        grok {
           patterns_dir => ["/etc/logstash/patterns"]
           match => { "message" => "^<%{POSINT:syslog_pri}> %{ADS_PRE} %{GREEDYDATA:message}"}
           overwrite => ["message"]
           add_field => {"appName" => "adssec"}
        }
  
   }
#***********************************Collapsar ***************************************************************
    else if "Collapsar" in [message] {
        grok {
           match => { "message" => "^<%{POSINT:syslog_pri}> %{GREEDYDATA:message}"}
           overwrite => ["message"]
           add_field => {"appName" => "collapsar"}
        }
        #mutate {
         #   gsub => ["message", "\n", ""]
       # }
    }    
#***************************portinfo pre-processed***********************************
   else if "Portinfo" in [message] {
        grok {
           match => { "message" => "^<%{POSINT:syslog_pri}>  %{GREEDYDATA:message}"}
           overwrite => ["message"]
           add_field => {"appName" => "portinfo"}
        }  
   }
   
#***********************************switch-pre**************************************************************   
   else if "H3110" in [message] or 
           "H2700" in [message] or 
           "H3100" in [message] or 
           "H5500" in [message] or 
           "H3600" in [message] or
           "H3126" in [message] or
           "H2630" in [message] or
           "H3300" in [message] or
           "H3640" in [message] or             
           "H3011" in [message] or
           "H2011" in [message] or
           "S3100" in [message] or
           "SGZ94" in [message] or
           "MSR3600" in [message] or
           "RADIUS" in [message] or
           "SGZ93" in [message] or
           "S_ZGGQ" in [message] or
           "S_ZHHQ" in [message] or
           "SZH85" in [message] or
           "SDL-43" in [message] or
           "SDL-23" in [message] or
           "SDL_12" in [message] or
           "SGZ84" in [message] or
           "SZH84" in [message] or
           "SZH86" in [message] or
           "SZH83" in [message] or
           "SGZ83" in [message] or      
           "SZH-23" in [message] or
           "SZH-24" in [message] or
           "H3152" in [message] or
           "CST:" in [message] or
           "S-ZZ"  in [message] or
           "PRD-3600" in [message] or
           "PRD_3600" in [message] or
           "PRD-3100" in [message] or
           "PRD_3100" in [message] or
           "VOICE-3100" in [message] or
           "OA-3600" in [message] or
           "OA-3100" in [message] or
           "OA_3100" in [message] or
           "OA_3600" in [message] or  
           "MSR3011" in [message] or
           "LINK-3-UPDOWN" in [message] or
           "VALIDKEY" in [message] or
           "MISMATCH" in [message] or
           "ENVMON"   in [message] or
           "MACFLAP_NOTIF" in [message] 
   {
        grok {
           patterns_dir => ["/etc/logstash/patterns"]
           match => { "message" => ["^<%{POSINT:syslog_pri}>%{SWITCH_TIME_1:switch_time} %{GREEDYDATA:message}",
                                    "^<%{POSINT:syslog_pri}>%{SWITCH_TIME_2:switch_time} %{GREEDYDATA:message}",
                                    "^<%{POSINT:syslog_pri}>%{SWITCH_TIME_3:switch_time} %{GREEDYDATA:message}",
                                    "^<%{POSINT:syslog_pri}>%{SWITCH_TIME_9:switch_time} %{GREEDYDATA:message}",
                                    "^<%{POSINT:syslog_pri}>%{INT:switch_num}\: %{SWITCH_TIME_3:switch_time}\: %{GREEDYDATA:message}",
                                    "^<%{POSINT:syslog_pri}>%{INT:switch_num}\: %{SWITCH_TIME_4:switch_time}\: %{GREEDYDATA:message}",
                                    "^<%{POSINT:syslog_pri}>%{INT:switch_num}\: %{SWITCH_TIME_5:switch_time}\: %{GREEDYDATA:message}",
                                    "^<%{POSINT:syslog_pri}>%{INT:switch_num}\: %{SWITCH_TIME_6:switch_time}\: %{GREEDYDATA:message}",
                                    "^<%{POSINT:syslog_pri}>%{INT:switch_num}\: %{SWITCH_TIME_1:switch_time}\: %{GREEDYDATA:message}",
                                    "^<%{POSINT:syslog_pri}>%{INT:switch_num}\: %{SWITCH_TIME_7:switch_time}\: %{GREEDYDATA:message}", 
                                    "^<%{POSINT:syslog_pri}>%{INT:switch_num}\: %{SWITCH_TIME_8:switch_time}\: %{GREEDYDATA:message}"
                                   ] 
                    }
           overwrite => ["message"]
           add_field => {"appName" => "switch"}
        }
   }
#*****************pre-treated cisco ************************************************** 
   else if [source] == "secdev" {
       grok {
           patterns_dir => ["/etc/logstash/patterns"]
           match => {"message" => 
              [
                 "%{CISCO_TAGGED_SYSLOG} %{GREEDYDATA:message}",
		 "%{NEWCISCO_TAGGED_SYSLOG} %{GREEDYDATA:message}"
              ]
           }
           overwrite => ["message"]
       }
   }

}
filter {
   if [syslog_pri] {
       syslog_pri {}
   }
   if [appName] == "tpips" {
       mutate {
          gsub => ["csv_message", "\"", ""]
       }
       csv {
            source => "csv_message"
            separator => "	"
            columns => ["sev", "log_type", "policy_uuid", "action_uuid", "sig_name", "policy_id", "protocol_name", "src_ip", "src_port", "dst_ip", "dst_port", "event_num", "param_1", "param_2", "param_3", "packet_num", "device_name", "device_segment", "timestamp", "param_4", "param_5"]
            convert => {
              "src_port" => "integer"
              "dst_port" => "integer"
            }
          }
   }
   if [source] == "secdev" and [ciscotag] {
       grok {
           patterns_dir => ["/etc/logstash/patterns"]
           match => {
               "message" => [
                   "%{NEWCISCOFW106023}",
                   "%{CISCOFW106015}",
                   "%{CISCOFW106014}",
                   "%{NEWCISCOFW106017}",
		   "%{CISCOFW106001}",
		   "%{NEWCISCOFW713120}",
		   "%{CISCOFW106100}",
	 	   "%{CISCOFW302020_302021}",
		   "%{CISCOFW302013_302014_302015_302016}",
		   "%{CISCOFW733100}",
		   "%{TCISCOFW313005}",
		   "%{CISCOFW106006_106007_106010}",
		   "%{CISCOFW302010}",
		   "%{NEWCISCOFW111007}"	 		 
               ]
	   }
	   add_field => {"appName" => "ciscofw"}
       }
   }
   if [appName] == "netscreen" {
       grok {
          patterns_dir => ["/etc/logstash/patterns"]
          match => { "message" => ["%{NETSCREEN_SYSLOG_1}", "%{NETSCREEN_SYSLOG_2}"]}
          
       }

   }

#*********************waf-sec**********************************************************************************************
   if [appName] == "wafsec" {
       grok {
          patterns_dir => ["/etc/logstash/patterns"]
          match => { "message" => ["%{WAF_SEC_1}"]}
       }

   }
#***********************waf-stat******************************************************************************************   
   if [appName] == "wafstat" {
       grok {
          patterns_dir => ["/etc/logstash/patterns"]
          match => { "message" => ["%{WAF_SEC_2}"]}
       }

   }
#***********************firewall-wl*************************************************
  if [appName] == "firewallwl" {
      grok{
        patterns_dir => ["/etc/logstash/patterns"]
        match => { "message" => [
                                  "%{FIREWALL_WL_1}",
                                  "%{FIREWALL_WL_2}",
                                  "%{SWITCH_01}"
                                 ]
                 }
      }
   }
#**********************ads-sec********************************************************************************************
   if [appName] == "adssec" {
      kv { include_keys => ["src", "dst", "sport", "dport", "flag"] }
      mutate {
         rename => ["src", "src_ip"]
         rename => ["dst", "dst_ip"]
         rename => ["sport", "src_port"]
         rename => ["dport", "dst_port"]
         gsub => ["flag", "\n", ""]
      }
         
   }
#***************************collapsar*************************************************************************************
   if [appName] == "collapsar" {
      grok { 
        patterns_dir => ["/etc/logstash/patterns"]
        match => { "message" => "%{COLLAPSAR}" }
      }
   }
#******************************portinfo**************************************************************************
   if [appName] == "portinfo" {
      grok { 
        patterns_dir => ["/etc/logstash/patterns"]
        match => { "message" => "%{PORTINFO}" }
      }
   }
#********************************switch***************************************************************************************
   if [appName] == "switch" {
      grok {
        patterns_dir => ["/etc/logstash/patterns"]
        match => { "message" => [ "%{SWITCH_01}",
                                  "%{SWITCH_02}"    
                                ]
           
                 }
      }
   }
#*********************use kv plugin parse netscreen_J140-01 and add field protocol if there is icmp field*****************************
   if [appName] == "netscreenfw"{

     	kv {
	   include_keys => ["start_time", "duration", "policy_id", "service", "proto", "zone", "action", "sent", "rcvd", "src", "dst", "icmp", "src_port", "dst_port", "ip", "port", "session_id", "reason", "type", "code"]
        }
        mutate {
           copy => {"zone[0]" => "src_zone"}
           copy => {"zone[1]" => "dst_zone"} 
           copy => {"ip[0]" => "src_xlated_ip"} 
           copy => {"ip[1]" => "dst_xlated_ip"} 
           copy => {"port[0]" => "src_xlated_port"}
           copy => {"port[1]" => "dst_xlated_port"} 
           remove_field => ["zone"]
           remove_field => ["ip"]
           remove_field => ["port"]           
           rename => ["src", "src_ip"]
           rename => ["dst", "dst_ip"]           
	}
        if [service] == "icmp" {
              mutate {
                   add_field => { "protocol" => "icmp" }
              }
        }

   }
   if [timestamp] {
      date{
          match => ["timestamp", "MMM dd yyyy HH:mm:ss", "ISO8601", "UNIX", "UNIX_MS"]
          target => "@timestamp"
      }
   }
   if [src_ip] {
       geoip{
           source => "src_ip"
           target => "s_geoip"
           fields => ["city_name", "country_name", "region_name", "location"]   
       }
   }
   if [dst_ip] {
       geoip{
           source => "dst_ip"
           target => "d_geoip"
           fields => ["city_name", "country_name", "region_name", "location"]   
       }
    }
}


##****************************add region******************************************************************
filter {
    if [host] =~ /^10\.183\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "zhengzhou" }
       }
    }
    else  if [host] =~ /^10\.163\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "shenzhen" }      
       }
    }
    else  if [host] =~ /^10\.164\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "zhuhai"}
       } 
    }
    else if  [host] =~ /^10\.165\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "guangzhou"}   
       }
    }
    else if  [host] =~ /^10\.166\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "xiamen"}   
       }
    }
    else if  [host] =~ /^10\.167\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "dalian"}   
       }
    } 
    else if  [host] =~ /^10\.169\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "xi'an"}   
       }
    } 
    else if  [host] =~ /^10\.170\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "beijing"}   
       }
    } 
    else if  [host] =~ /^10\.171\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "chengdu"}   
       }
    } 
    else if  [host] =~ /^10\.172\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "hangzhou"}   
       }
    } 
    else if  [host] =~ /^10\.173\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "chongqing"}   
       }
    } 
    else if  [host] =~ /^10\.174\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "qingdao"}   
       }
    } 
    else if  [host] =~ /^10\.175\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "shenyang"}   
       }
    } 
    else if  [host] =~ /^10\.176\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "wuhan"}   
       }
    } 
    else if  [host] =~ /^10\.177\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "nanjing"}   
       }
    } 
    else if  [host] =~ /^10\.178\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "tianjin"}   
       }
    } 
    else if  [host] =~ /^10\.179\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "wulumuqi"}   
       }
    } 
    else if  [host] =~ /^10\.180\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "hefei"}   
       }
    } 
    else if  [host] =~ /^10\.181\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "shijiazhuang"}   
       }
    } 
    else if  [host] =~ /^10\.182\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "suzhou"}   
       }
    } 
    else if  [host] =~ /^10\.184\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "haerbin"}   
       }
    } 
    else if  [host] =~ /^10\.185\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "changsha"}   
       }
    } 
    else if  [host] =~ /^10\.186\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "kunming"}   
       }
    } 
    else if  [host] =~ /^10\.187\.(6[0-3]|[0-9]|[1-5][0-9])\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "ningbo"}   
       }
    } 
    else if  [host] =~ /^10\.187\.(6[4-9]|[7-9][0-9]|12[0-7]|1[0-1][0-9])\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "jinan"}   
       }
    } 
    else if  [host] =~ /^10\.187\.(12[8-9]|1[3-8][0-9]|19[0-1])\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "wuxi"}   
       }
    } 
    else if  [host] =~ /^10\.187\.(19[2-9]|25[0-5]|2[0-4][0-9])\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "fuzhou"}   
       }
    } 
    else if  [host] =~ /^10\.195\.([0-9]|[1-5][0-9]|6[0-3])\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "nanjing"}   
       }
    } 
    else if  [host] =~ /^10\.195\.(6[4-9]|[7-9][0-9]|12[0-7]|1[0-1][0-9])\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "nanchang"}   
       }
    } 
    else if  [host] =~ /^10\.168\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "shanghai"}   
       }
    } 
    else if  [host] =~ /^10\.192\.(239|240|113|114)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ {
       mutate {
          add_field => { "region" => "WL"}   
       }
    }
  
}

##****************************output*********************************************************************
output {
   if "_grokparsefailure" in [tags] or "_dateparsefailure" in [tags]  or "_csvparsefailure" in [tags] {
       stdout {
           codec => rubydebug
       }
       udp {
         host => "192.168.1.27"
         port => 514
         codec => "plain"
                    
       } 
   }
   if [type] == "network_device" or [type] == "security_device" {
       kafka {
           topic_id => "titan-syslog-topic-1"
           bootstrap_servers => "192.168.1.12:9092,192.168.1.12:9093,192.168.1.13:9092"
           message_key => "%{source}|%{appName}|all|month|%{@timestamp}"
           codec => "json"
       }
   }
}
